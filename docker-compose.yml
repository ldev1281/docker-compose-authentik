services:

  authentik-postgres:
    image: postgres:${AUTHENTIK_POSTGRES_VERSION}
    container_name: authentik-postgres
    restart: unless-stopped

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTHENTIK_POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

    environment:
      POSTGRES_DB: ${AUTHENTIK_POSTGRES_DB}
      POSTGRES_USER: ${AUTHENTIK_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AUTHENTIK_POSTGRES_PASSWORD}

    volumes:
      - ./vol/authentik-postgres/var/lib/postgresql/data:/var/lib/postgresql/data

    networks:
      - authentik-private


  authentik-redis:
    image: redis:alpine
    container_name: authentik-redis
    restart: unless-stopped

    command: --save 60 1 --loglevel warning

    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 3s
      retries: 5

    volumes:
      - ./vol/authentik-redis/data:/data

    networks:
      - authentik-private


  authentik-app:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG}
    container_name: authentik-app
    restart: unless-stopped

    command: server

    depends_on:
      authentik-postgres:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy

    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_POSTGRES_USER}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_POSTGRES_DB}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_POSTGRES_PASSWORD}

      # SMTP settings
      AUTHENTIK_EMAIL__HOST: ${AUTHENTIK_EMAIL__HOST:-localhost}
      AUTHENTIK_EMAIL__PORT: ${AUTHENTIK_EMAIL__PORT:-25}
      AUTHENTIK_EMAIL__USERNAME: ${AUTHENTIK_EMAIL__USERNAME:-}
      AUTHENTIK_EMAIL__PASSWORD: ${AUTHENTIK_EMAIL__PASSWORD:-}
      AUTHENTIK_EMAIL__USE_TLS: ${AUTHENTIK_EMAIL__USE_TLS:-false}
      AUTHENTIK_EMAIL__USE_SSL: ${AUTHENTIK_EMAIL__USE_SSL:-false}
      AUTHENTIK_EMAIL__TIMEOUT: ${AUTHENTIK_EMAIL__TIMEOUT:-10}
      AUTHENTIK_EMAIL__FROM: ${AUTHENTIK_EMAIL__FROM:-authentik@localhost}

    volumes:
      - ./vol/authentik-app/media:/media
      - ./vol/authentik-app/templates:/templates

    networks:
      - authentik-private
      - proxy-client-authentik


  authentik-worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG}
    container_name: authentik-worker
    restart: unless-stopped

    command: worker

    depends_on:
      authentik-postgres:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy

    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
      AUTHENTIK_POSTGRESQL__USER: ${AUTHENTIK_POSTGRES_USER}
      AUTHENTIK_POSTGRESQL__NAME: ${AUTHENTIK_POSTGRES_DB}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${AUTHENTIK_POSTGRES_PASSWORD}

      # SMTP settings
      AUTHENTIK_EMAIL__HOST: ${AUTHENTIK_EMAIL__HOST:-localhost}
      AUTHENTIK_EMAIL__PORT: ${AUTHENTIK_EMAIL__PORT:-25}
      AUTHENTIK_EMAIL__USERNAME: ${AUTHENTIK_EMAIL__USERNAME:-}
      AUTHENTIK_EMAIL__PASSWORD: ${AUTHENTIK_EMAIL__PASSWORD:-}
      AUTHENTIK_EMAIL__USE_TLS: ${AUTHENTIK_EMAIL__USE_TLS:-false}
      AUTHENTIK_EMAIL__USE_SSL: ${AUTHENTIK_EMAIL__USE_SSL:-false}
      AUTHENTIK_EMAIL__TIMEOUT: ${AUTHENTIK_EMAIL__TIMEOUT:-10}
      AUTHENTIK_EMAIL__FROM: ${AUTHENTIK_EMAIL__FROM:-authentik@localhost}

    volumes:
      - ./vol/authentik-app/media:/media
      - ./vol/authentik-app/templates:/templates

    networks:
      - authentik-private

networks:

  proxy-client-authentik:
    name: proxy-client-authentik
    external: true

  authentik-private:
    name: authentik-private
    driver: bridge
    internal: true